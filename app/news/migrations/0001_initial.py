# Generated by Django 3.2.23 on 2024-02-01 05:08

import django.db.models.deletion
import taggit.managers
import tinymce.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('taggit', '0005_auto_20220424_2025'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('description', models.CharField(max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(db_index=True, max_length=50, null=True)),
                ('content', tinymce.models.HTMLField(max_length=5000)),
                ('publish_date', models.DateTimeField(verbose_name='date published')),
                ('views', models.IntegerField(default=0)),
                ('likes', models.IntegerField(default=0)),
                ('dislikes', models.IntegerField(default=0)),
                ('image', models.ImageField(blank=True, null=True, upload_to='image')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='news.category')),
                ('creator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('categories', models.ManyToManyField(related_name='users_with_privileges', to='news.Category')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='user_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='News_draft',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=50, null=True)),
                ('content', tinymce.models.HTMLField(max_length=5000)),
                ('image', models.ImageField(blank=True, null=True, upload_to='image')),
                ('is_up_for_review', models.BooleanField(null=True)),
                ('is_up_for_deletion', models.BooleanField(default=False, null=True)),
                ('was_seen_by_editor', models.BooleanField(default=False, null=True)),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='news.category')),
                ('creator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('draft_of', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='news.news')),
                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
        ),
        migrations.CreateModel(
            name='Likes',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('object_id', models.PositiveIntegerField()),
                ('is_dislike', models.BooleanField(default=False)),
                ('like_identifier', models.CharField(blank=True, max_length=255, null=True)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('text', models.CharField(max_length=1000)),
                ('tmp_username', models.CharField(max_length=50, null=True)),
                ('publish_date', models.DateTimeField(null=True, verbose_name='date published')),
                ('likes', models.IntegerField(default=0)),
                ('dislikes', models.IntegerField(default=0)),
                ('news', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='news.news')),
            ],
        ),
        migrations.AddIndex(
            model_name='news',
            index=models.Index(fields=['title'], name='news_news_title_ef31ad_idx'),
        ),
    ]
